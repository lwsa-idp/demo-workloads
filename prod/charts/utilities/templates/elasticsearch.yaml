apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: quickstart
spec:
  version: 8.15.2
  nodeSets:
  - name: default
    count: 3
    # https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-managing-compute-resources.html#k8s-compute-resources-elasticsearch
    podTemplate:
      spec:
        containers:
        - name: elasticsearch
          resources:
            requests:
              memory: 1Gi
              cpu: 75m
            limits:
              memory: 1Gi
              cpu: '1'
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data # Do not change this name unless you set up a volume mount for the data path.
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 50Gi
        storageClassName: {{ $.Values.global.dbStorageClassName }}
---
apiVersion: kibana.k8s.elastic.co/v1
kind: Kibana
metadata:
  name: quickstart
spec:
  version: 8.15.2
  count: 1
  elasticsearchRef:
    name: quickstart
  http:
    tls:
      selfSignedCertificate:
        disabled: true
---
# Já visto em forums que Kibana procura acessar metadados em 169.254.x.x, o que não faz sentido
# Tentativas aparecerão como dropped no Grafana. Aceitaremos.
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: kibana
spec:
  egress:
  - {}
  - toFQDNs:
      - matchPattern: '*.elastic.co'
    toPorts:
      - ports:
          - port: "443"
            protocol: TCP
  endpointSelector:
    matchLabels:
      kibana.k8s.elastic.co/name: quickstart
  ingress:
  - {}